parameters:
    coreshop.dto.add_to_cart.class: 'CoreShop\Bundle\OrderBundle\DTO\AddToCart'
    coreshop.dto.add_multiple_to_cart.class: 'CoreShop\Bundle\OrderBundle\DTO\AddMultipleToCart'

imports:
    - { resource: services_alias.yml }
    - { resource: services/order.yml }
    - { resource: services/order_invoice.yml }
    - { resource: services/order_shipment.yml }
    - { resource: services/cart-price-rules.yml }
    - { resource: services/cart-item-price-rules.yml }
    - { resource: services/workflow.yml }
    - { resource: services/pdf.yml }
    - { resource: services/purchasable.yml }
    - { resource: services/context.yml }
    - { resource: services/commands.yml }
    - { resource: services/profiler.yml }
    - { resource: services/cart.yml }
    - { resource: services/grid_config.yml }
    - { resource: services/payment.yml }
    - { resource: services/forms.yml }
    - { resource: services/checkout_listener.yml }
    - { resource: services/voucher-code-user.yml }
    - { resource: services/controller.yml }

services:
    _defaults:
        public: true

    CoreShop\Component\Order\Manager\CartManagerInterface: '@CoreShop\Bundle\OrderBundle\Manager\CartManager'
    CoreShop\Bundle\OrderBundle\Manager\CartManager:
        arguments:
            - '@CoreShop\Component\Order\Processor\CartProcessorInterface'
            - '@CoreShop\Component\Resource\Service\FolderCreationServiceInterface'

    coreshop.cart_item.quantity_modifier: '@CoreShop\Component\StorageList\StorageListItemQuantityModifier'
    CoreShop\Component\StorageList\StorageListItemQuantityModifier: ~

    CoreShop\Component\Order\Cart\CartItemResolver: ~

    CoreShop\Component\Order\Cart\CartModifierInterface: '@CoreShop\Component\Order\Cart\CartModifier'
    CoreShop\Component\Order\Cart\CartModifier:
        arguments:
            - '@coreshop.cart_item.quantity_modifier'
            - '@event_dispatcher'
            - '@CoreShop\Component\Order\Cart\CartItemResolver'

    coreshop.order.invoice.processable:
        class: CoreShop\Component\Order\Processable\ProcessableOrderItems
        arguments:
            - '@coreshop.repository.order_invoice'
            - !php/const CoreShop\Component\Order\InvoiceStates::STATE_CANCELLED

    coreshop.order.shipment.processable:
        class: CoreShop\Component\Order\Processable\ProcessableOrderItems
        arguments:
            - '@coreshop.repository.order_shipment'
            - !php/const CoreShop\Component\Order\ShipmentStates::STATE_CANCELLED

    CoreShop\Component\Order\Transformer\TransformerEventDispatcherInterface: '@CoreShop\Component\Order\Transformer\TransformerEventDispatcher'
    CoreShop\Component\Order\Transformer\TransformerEventDispatcher:
        public: false
        arguments:
            - '@event_dispatcher'

    CoreShop\Component\Order\Processor\CartProcessorInterface: '@CoreShop\Component\Order\Processor\CompositeCartProcessor'
    CoreShop\Component\Order\Processor\CompositeCartProcessor: ~

    CoreShop\Bundle\OrderBundle\Expiration\OrderAndCartExpiration:
        arguments:
            - '@CoreShop\Bundle\OrderBundle\Expiration\OrderExpiration'
            - '@CoreShop\Bundle\OrderBundle\Expiration\CartExpiration'

    CoreShop\Bundle\OrderBundle\Expiration\CartExpiration:
        shared: false
        arguments:
             - '@coreshop.repository.order'

    CoreShop\Bundle\OrderBundle\Expiration\OrderExpiration:
        shared: false
        arguments:
             - '@coreshop.repository.order'
             - '@CoreShop\Bundle\WorkflowBundle\Applier\StateMachineApplierInterface'
             - '@CoreShop\Bundle\WorkflowBundle\History\HistoryLoggerInterface'

    CoreShop\Component\Order\Distributor\ProportionalIntegerDistributorInterface: '@CoreShop\Component\Order\Distributor\ProportionalIntegerDistributor'
    CoreShop\Component\Order\Distributor\ProportionalIntegerDistributor: ~

    CoreShop\Component\Order\Distributor\IntegerDistributorInterface: '@CoreShop\Component\Order\Distributor\IntegerDistributor'
    CoreShop\Component\Order\Distributor\IntegerDistributor: ~

    CoreShop\Component\Order\Distributor\FloatDistributorInterface: '@CoreShop\Component\Order\Distributor\FloatDistributor'
    CoreShop\Component\Order\Distributor\FloatDistributor: ~

    CoreShop\Component\Order\Factory\AdjustmentFactoryInterface: '@CoreShop\Component\Order\Factory\AdjustmentFactory'
    CoreShop\Component\Order\Factory\AdjustmentFactory:
        decorates: coreshop.factory.adjustment
        decoration_priority: 256
        public: false
        arguments:
            - '@CoreShop\Component\Order\Factory\AdjustmentFactory.inner'

    CoreShop\Component\Order\Factory\CartPriceRuleVoucherCodeUserFactoryInterface: '@CoreShop\Component\Order\Factory\CartPriceRuleVoucherCodeUserFactory'
    CoreShop\Component\Order\Factory\CartPriceRuleVoucherCodeUserFactory:
      decorates: coreshop.factory.cart_price_rule_voucher_code_customer
      decoration_priority: 256
      public: false
      arguments:
        - '@CoreShop\Component\Order\Factory\CartPriceRuleVoucherCodeUserFactory.inner'

    CoreShop\Component\Order\Factory\OrderItemFactory:
        decorates: coreshop.factory.order_item
        decoration_priority: 256
        public: false
        arguments:
            - '@CoreShop\Component\Order\Factory\OrderItemFactory.inner'

    CoreShop\Component\Resource\TokenGenerator\UniqueTokenGenerator: ~

    CoreShop\Component\Order\Factory\OrderFactory:
        decorates: coreshop.factory.order
        decoration_priority: 256
        public: false
        arguments:
            - '@CoreShop\Component\Order\Factory\OrderFactory.inner'
            - '@CoreShop\Component\Resource\TokenGenerator\UniqueTokenGenerator'

    CoreShop\Bundle\OrderBundle\Factory\AddToCartFactoryInterface: '@CoreShop\Bundle\OrderBundle\Factory\AddToCartFactory'
    CoreShop\Bundle\OrderBundle\Factory\AddToCartFactory:
        arguments:
            - '%coreshop.dto.add_to_cart.class%'

    CoreShop\Bundle\OrderBundle\Factory\AddMultipleToCartFactoryInterface: '@CoreShop\Bundle\OrderBundle\Factory\AddMultipleToCartFactory'
    CoreShop\Bundle\OrderBundle\Factory\AddMultipleToCartFactory:
        arguments:
            - '%coreshop.dto.add_multiple_to_cart.class%'
